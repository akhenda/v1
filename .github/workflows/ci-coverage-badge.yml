name: Coverage Badge

on: workflow_call

jobs:
  code-coverage-badge:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: ‚§µÔ∏è Download artifact (base code coverage results)
        if: github.event_name == 'pull_request'
        uses: dawidd6/action-download-artifact@v6
        id: restored-base-code-coverage
        with:
          workflow: merge.yml
          workflow_conclusion: success
          branch: dev
          name: coverage
          path: coverage-base
          if_no_artifact_found: ignore
        continue-on-error: true

      - name: ‚§µÔ∏è Download code coverage results
        id: restored-code-coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: coverage

      - name: üìã Display structure of downloaded files
        run: ls -R

      - name: üñ•Ô∏è Debug Secrets
        env:
          DEBUG_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG_COVERAGE_BADGES_GIST_TOKEN: ${{ secrets.COVERAGE_BADGES_GIST_TOKEN }}
          DEBUG_GIST_SECRET: ${{ secrets.GIST_SECRET }}
          DEBUG_NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo ${#DEBUG_GITHUB_TOKEN}
          echo ${#DEBUG_COVERAGE_BADGES_GIST_TOKEN}
          echo ${#DEBUG_GIST_SECRET}
          echo ${#DEBUG_NPM_TOKEN}

      - name: üìî Create coverage badge
        uses: dkhunt27/nx-code-coverage@v2
        with:
          no-coverage-ran: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-folder: ./coverage
          coverage-base-folder: ./coverage-base
          gist-token: ${{ secrets.COVERAGE_BADGES_GIST_TOKEN }}
          gist-id: e87e6f67fa5b4ffc5757bc946b8db87a
          color: green
          named-logo: jest
          gist-processing: true
          hide-coverage-reports: false
          hide-unchanged: false
